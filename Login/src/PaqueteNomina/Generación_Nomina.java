package PaqueteNomina;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Cursor;
import java.awt.Font;
import java.sql.*;

import static java.awt.PageAttributes.MediaType.C;
import java.io.BufferedReader;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zuzu-ai
 */

public class Generación_Nomina extends javax.swing.JFrame {

    /**
     * Crea un objeto de tipo AccesoAleatorioN para poder utilizar sus
     * funciones.
     */
    AccesoAleatorioN aleatorio = new AccesoAleatorioN();

    /**
     * Las advertensias se inicializan como invisibles. Se activan solo si el
     * usuario inclumple parámetros establecidos.
     */
    public Generación_Nomina() {
        initComponents();
        setLocationRelativeTo(null);
        setSize(1000, 700);
        comboDB();
        lblIngreseNum1.setVisible(false);
        lblIngreseNum2.setVisible(false);
        lblIngreseNum4.setVisible(false);
        lblIngreseNum5.setVisible(false);
        txtBonificacionIncentivo.setText("250.00");
        txtIsr.setText("0");
        /**
         * Redondea las variables de tipo float
         */
        DecimalFormat formato1 = new DecimalFormat("#.00");

        /**
         * Actualiza los datos en el combobox Departamento.
         */
        /* int registros=1000;
        FileReader fr;
        try {
            fr = new FileReader("Departamentos.txt");
            BufferedReader bf=new BufferedReader(fr);
           for(int i=0;i<registros;i++){
            String dato= bf.readLine();
            cmbxDepartamento.addItem(dato);
            i=i++;
           } 
            
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
        
           /**
     * Actualiza los datos en el combobox Nombre Empleado.
         */
 /*  try {
            fr = new FileReader("NombreEmpleados.txt");
            BufferedReader bf=new BufferedReader(fr);
           for(int i=0;i<registros;i++){
            String dato= bf.readLine();
            cmbxNombreEmpleado.addItem(dato);
            i=i++;
           } 
            
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
        
            /**
     * Actualiza los datos en el combobox Puesto.
         */
 /*  try {
            fr = new FileReader("Puestos.txt");
            BufferedReader bf=new BufferedReader(fr);
           for(int i=0;i<registros;i++){
            String dato= bf.readLine();
            cmbxPuesto.addItem(dato);
            i=i++;
           } 
            
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }*/
    }

    public void comboDB() {
        try {
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");

            PreparedStatement pst2 = cn.prepareStatement("select Nombre_Empleado from Empleados");
            ResultSet rs2 = pst2.executeQuery();
            

            
            cmbxNombreEmpleado.addItem("Seleccione una opción");
            while (rs2.next()) {
                cmbxNombreEmpleado.addItem(rs2.getString("Nombre_Empleado"));
            }
          

        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIngresodeDatos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblCalculodeIngresos = new javax.swing.JLabel();
        lblComisiones = new javax.swing.JLabel();
        txtComisiones = new javax.swing.JTextField();
        lblIngreseNum1 = new javax.swing.JLabel();
        lblCalculodeDescuentos = new javax.swing.JLabel();
        lblIgss = new javax.swing.JLabel();
        txtIgss = new javax.swing.JTextField();
        txtIsr = new javax.swing.JTextField();
        lblIsr = new javax.swing.JLabel();
        txtTotalDescuentos = new javax.swing.JTextField();
        lblTotalDescuentos = new javax.swing.JLabel();
        IngresarEmpleado = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        txtSueldoLiquido = new javax.swing.JTextField();
        lblTotalDescuentos1 = new javax.swing.JLabel();
        lblIngreseNum6 = new javax.swing.JLabel();
        txtAnticipos = new javax.swing.JTextField();
        lblAnticipos = new javax.swing.JLabel();
        lblIngreseNum4 = new javax.swing.JLabel();
        txtDescuentosJ = new javax.swing.JTextField();
        lblDescuentosJ = new javax.swing.JLabel();
        lblIngreseNum5 = new javax.swing.JLabel();
        txtOtrosDescuentos = new javax.swing.JTextField();
        lblOtrosDescuentos = new javax.swing.JLabel();
        lblIngreseNum2 = new javax.swing.JLabel();
        txtBonificacionesExtra = new javax.swing.JTextField();
        lblBonificacionesExtra = new javax.swing.JLabel();
        txtBonificacionIncentivo = new javax.swing.JTextField();
        lblBonificacionIncentivo = new javax.swing.JLabel();
        txtSueldoDevengado = new javax.swing.JTextField();
        lblSueldoDevengado = new javax.swing.JLabel();
        txtSueldoBase = new javax.swing.JTextField();
        lblSueldoBase = new javax.swing.JLabel();
        cmbxNombreEmpleado = new javax.swing.JComboBox<>();
        lblNombreEmpleado = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        fechanomina = new javax.swing.JLabel();
        codigoe = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        buscar = new javax.swing.JTextField();
        ConceptoE = new javax.swing.JLabel();

        setTitle("Generación de Nómina");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(938, 894));

        lblIngresodeDatos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIngresodeDatos.setText("Ingreso de Datos");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("*Si el empleado no tiene algun ingreso o descuento, coloque un 0 en la casilla.");

        lblCalculodeIngresos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCalculodeIngresos.setText("Calculo de Ingresos");

        lblComisiones.setText("Comisiones:");

        txtComisiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComisionesActionPerformed(evt);
            }
        });
        txtComisiones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtComisionesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComisionesKeyTyped(evt);
            }
        });

        lblIngreseNum1.setText("Ingrese números");

        lblCalculodeDescuentos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCalculodeDescuentos.setText("Calculo de Descuentos");

        lblIgss.setText("IGSS:");

        txtIgss.setEditable(false);
        txtIgss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIgssActionPerformed(evt);
            }
        });
        txtIgss.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIgssKeyReleased(evt);
            }
        });

        txtIsr.setEditable(false);
        txtIsr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIsrActionPerformed(evt);
            }
        });
        txtIsr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIsrKeyReleased(evt);
            }
        });

        lblIsr.setText("ISR:");

        txtTotalDescuentos.setEditable(false);

        lblTotalDescuentos.setText("Total Descuentos:");

        IngresarEmpleado.setText("Ingresar");
        IngresarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngresarEmpleadoActionPerformed(evt);
            }
        });

        Limpiar.setText("Limpiar");
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        txtSueldoLiquido.setEditable(false);
        txtSueldoLiquido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lblTotalDescuentos1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTotalDescuentos1.setText("Sueldo Líquido:");

        lblIngreseNum6.setText("Ingrese números");

        txtAnticipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnticiposActionPerformed(evt);
            }
        });
        txtAnticipos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAnticiposKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnticiposKeyTyped(evt);
            }
        });

        lblAnticipos.setText("Anticipos Concedidos:");

        lblIngreseNum4.setText("Ingrese números");

        txtDescuentosJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescuentosJActionPerformed(evt);
            }
        });
        txtDescuentosJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescuentosJKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentosJKeyTyped(evt);
            }
        });

        lblDescuentosJ.setText("Descuentos Judiciales:");

        lblIngreseNum5.setText("Ingrese números");

        txtOtrosDescuentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOtrosDescuentosActionPerformed(evt);
            }
        });
        txtOtrosDescuentos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOtrosDescuentosKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOtrosDescuentosKeyTyped(evt);
            }
        });

        lblOtrosDescuentos.setText("Otros Descuentos:");

        lblIngreseNum2.setText("Ingrese números");

        txtBonificacionesExtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBonificacionesExtraActionPerformed(evt);
            }
        });
        txtBonificacionesExtra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBonificacionesExtraKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBonificacionesExtraKeyTyped(evt);
            }
        });

        lblBonificacionesExtra.setText("Bonificaciones Extra:");

        txtBonificacionIncentivo.setEditable(false);
        txtBonificacionIncentivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBonificacionIncentivoActionPerformed(evt);
            }
        });

        lblBonificacionIncentivo.setText("Bonificacion Incentivo:");

        txtSueldoDevengado.setEditable(false);
        txtSueldoDevengado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSueldoDevengadoActionPerformed(evt);
            }
        });

        lblSueldoDevengado.setText("Sueldo Devengado:");

        txtSueldoBase.setEditable(false);
        txtSueldoBase.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtSueldoBaseInputMethodTextChanged(evt);
            }
        });
        txtSueldoBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSueldoBaseActionPerformed(evt);
            }
        });
        txtSueldoBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSueldoBaseKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSueldoBaseKeyTyped(evt);
            }
        });

        lblSueldoBase.setText("Sueldo Base:");

        cmbxNombreEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxNombreEmpleadoActionPerformed(evt);
            }
        });
        cmbxNombreEmpleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbxNombreEmpleadoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbxNombreEmpleadoKeyReleased(evt);
            }
        });

        lblNombreEmpleado.setText("Nombre Empleado:");

        fechanomina.setText("fecha nomina");

        codigoe.setText("Codigo");

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        ConceptoE.setText("Concepto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbxNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(10, 10, 10)
                                        .addComponent(codigoe)
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSueldoBase)
                                            .addComponent(txtSueldoBase, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(414, 414, 414)
                                        .addComponent(ConceptoE, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fechanomina)
                                .addGap(18, 18, 18)
                                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(IngresarEmpleado)
                                .addGap(18, 18, 18)
                                .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar)
                                .addGap(18, 18, 18)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblIngresodeDatos)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblIngreseNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblIngreseNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtComisiones, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtBonificacionesExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtBonificacionIncentivo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtSueldoDevengado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblComisiones, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(lblBonificacionesExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(lblBonificacionIncentivo)
                                        .addGap(30, 30, 30)
                                        .addComponent(lblSueldoDevengado, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTotalDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(txtSueldoLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtIsr, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)
                                        .addComponent(txtAnticipos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDescuentosJ)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(lblIngreseNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtDescuentosJ, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(53, 53, 53)
                                                .addComponent(lblIngreseNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblOtrosDescuentos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtOtrosDescuentos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTotalDescuentos)
                                        .addGap(39, 39, 39)
                                        .addComponent(lblTotalDescuentos1))))
                            .addComponent(lblCalculodeIngresos)
                            .addComponent(lblCalculodeDescuentos)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(lblIgss, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtIgss, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53)
                                .addComponent(lblIsr, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAnticipos)
                                    .addComponent(lblIngreseNum6))))))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fechanomina))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(IngresarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lblIngresodeDatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(lblNombreEmpleado)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbxNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codigoe)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSueldoBase)
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSueldoBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ConceptoE))))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIgss)
                        .addGap(9, 9, 9)
                        .addComponent(txtIgss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCalculodeIngresos)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblComisiones)
                            .addComponent(lblBonificacionesExtra)
                            .addComponent(lblBonificacionIncentivo)
                            .addComponent(lblSueldoDevengado))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtComisiones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBonificacionesExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBonificacionIncentivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSueldoDevengado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIngreseNum1)
                            .addComponent(lblIngreseNum2))
                        .addGap(27, 27, 27)
                        .addComponent(lblCalculodeDescuentos)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblIsr)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAnticipos)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAnticipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3)
                                        .addComponent(lblIngreseNum6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblDescuentosJ)
                                            .addComponent(lblOtrosDescuentos))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtDescuentosJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtOtrosDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(lblIngreseNum5)
                                                .addGap(3, 3, 3))
                                            .addComponent(lblIngreseNum4, javax.swing.GroupLayout.Alignment.TRAILING))))))
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalDescuentos1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblTotalDescuentos)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSueldoLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtTotalDescuentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtComisionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComisionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComisionesActionPerformed

    private void txtBonificacionesExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBonificacionesExtraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBonificacionesExtraActionPerformed

    private void txtBonificacionIncentivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBonificacionIncentivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBonificacionIncentivoActionPerformed

    private void txtSueldoDevengadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSueldoDevengadoActionPerformed

    }//GEN-LAST:event_txtSueldoDevengadoActionPerformed

    private void txtIgssActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIgssActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIgssActionPerformed

    private void txtIsrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIsrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIsrActionPerformed

    private void txtAnticiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnticiposActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnticiposActionPerformed

    private void txtDescuentosJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescuentosJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescuentosJActionPerformed

    private void txtOtrosDescuentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOtrosDescuentosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOtrosDescuentosActionPerformed

    /**
     * Condiciona para que el usuario pueda escribir solamente números.
     */
    private void txtComisionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComisionesKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            lblIngreseNum1.setVisible(true);
        } else {
            lblIngreseNum1.setVisible(false);
        }
    }//GEN-LAST:event_txtComisionesKeyTyped
    /**
     * Condiciona para que el usuario pueda escribir solamente números.
     */
    private void txtBonificacionesExtraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBonificacionesExtraKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            lblIngreseNum2.setVisible(true);
        } else {
            lblIngreseNum2.setVisible(false);
        }
    }//GEN-LAST:event_txtBonificacionesExtraKeyTyped
    /**
     * Condiciona para que el usuario pueda escribir solamente números.
     */
    private void txtAnticiposKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnticiposKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtAnticiposKeyTyped
    /**
     * Condiciona para que el usuario pueda escribir solamente números.
     */
    private void txtDescuentosJKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentosJKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            lblIngreseNum4.setVisible(true);
        } else {
            lblIngreseNum4.setVisible(false);
        }
    }//GEN-LAST:event_txtDescuentosJKeyTyped
    /**
     * Condiciona para que el usuario pueda escribir solamente números.
     */
    private void txtOtrosDescuentosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOtrosDescuentosKeyTyped
        // TODO add your handling code here:
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            lblIngreseNum5.setVisible(true);
        } else {
            lblIngreseNum5.setVisible(false);
        }
    }//GEN-LAST:event_txtOtrosDescuentosKeyTyped
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtSueldoBaseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSueldoBaseKeyReleased

        String strSueldoBase = txtSueldoBase.getText();
        String strComisiones = txtComisiones.getText();
        String strBonificacionesExtra = txtBonificacionesExtra.getText();
        String strBonificacionIncentivo = txtBonificacionIncentivo.getText();

        if (strSueldoBase.equals("") == false && strBonificacionIncentivo.equals("") == false) {
            //CALCULO DE SUELDO DEVENGADO
//CONVERSION DE STRING A DOUBLE
            double dbSueldoBase = Double.parseDouble(txtSueldoBase.getText());
            double dbComisiones = Double.parseDouble(txtComisiones.getText());
            double dbBonificacionesExtra = Double.parseDouble(txtBonificacionesExtra.getText());
            double dbBonificacionIncentivo = Double.parseDouble(txtBonificacionIncentivo.getText());

            //CALCULO DE SUELDO DEVENGADO
            double dbSueldoDevengado = dbSueldoBase + dbComisiones + dbBonificacionesExtra + dbBonificacionIncentivo;
            dbSueldoDevengado = Math.round(dbSueldoDevengado * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strSueldoDevengado = String.valueOf(dbSueldoDevengado);
            //IMPRESIÓN EN PANTALLA
            txtSueldoDevengado.setText(strSueldoDevengado);

            //CALCULO DE DESCUENTOS
//IGSS
            double dbIgss = dbSueldoBase * 0.0483;
            //CONVERSION DE DOUBLE A STRING
            dbIgss = Math.round(dbIgss * 100) / 100d;
            String strIgss = String.valueOf(dbIgss);
            //IMPRESION EN PANTALLA
            txtIgss.setText(strIgss);

//ISR
            double dbIsr;
            if (dbSueldoBase < 6000) {
                dbIsr = 0;
                txtIsr.setText("0");
            } else {
                //CALCULO TOTAL INGRESOS
                double dbSueldoAnual = dbSueldoBase * 12;
                double dbBonificacionIncentivoAnual = dbBonificacionIncentivo * 12;
                double dbIngresoAnual = dbSueldoAnual + dbBonificacionIncentivoAnual;
                //CALCULO TOTAL DESCUENTOS
                double dbIgssAnual = dbIgss * 12;
                double dbDescuentoAnual = dbIgssAnual + 48000;
                //CALCULO RENTA BRUTA
                double dbRentaBruta = dbIngresoAnual - dbDescuentoAnual;
                //CALCULO ISR ANUAL
                double dbIsrAnual = dbRentaBruta * 0.05;
                //CALCULO ISR MENSUAL
                dbIsr = dbIsrAnual / 12;
                //CONVERSION DE DOUBLE A STRING
                String strIsr = String.valueOf(dbIsr);
                dbIsr = Math.round(dbIsr * 100) / 100d;
                //IMPRESION EN PANTALLA
                txtIsr.setText(strIsr);
            }

        }
    }//GEN-LAST:event_txtSueldoBaseKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtComisionesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComisionesKeyReleased

        String strSueldoBase = txtSueldoBase.getText();
        String strComisiones = txtComisiones.getText();
        String strBonificacionesExtra = txtBonificacionesExtra.getText();
        String strBonificacionIncentivo = txtBonificacionIncentivo.getText();

        if (strSueldoBase.equals("") == false && strBonificacionIncentivo.equals("") == false) {
            //CALCULO DE SUELDO DEVENGADO
//CONVERSION DE STRING A DOUBLE
            double dbSueldoBase = Double.parseDouble(txtSueldoBase.getText());
            double dbComisiones = Double.parseDouble(txtComisiones.getText());
            double dbBonificacionesExtra = Double.parseDouble(txtBonificacionesExtra.getText());
            double dbBonificacionIncentivo = Double.parseDouble(txtBonificacionIncentivo.getText());

            //CALCULO DE SUELDO DEVENGADO
            double dbSueldoDevengado = dbSueldoBase + dbComisiones + dbBonificacionesExtra + dbBonificacionIncentivo;
            dbSueldoDevengado = Math.round(dbSueldoDevengado * 100) / 100;
            //CONVERSION DE DOUBLE A STRING
            String strSueldoDevengado = String.valueOf(dbSueldoDevengado);
            //IMPRESIÓN EN PANTALLA
            txtSueldoDevengado.setText(strSueldoDevengado);

            //CALCULO DE DESCUENTOS
//IGSS
            double dbIgss = dbSueldoBase * 0.0483;
            //CONVERSION DE DOUBLE A STRING
            dbIgss = Math.round(dbIgss * 100) / 100;
            String strIgss = String.valueOf(dbIgss);
            //IMPRESION EN PANTALLA
            txtIgss.setText(strIgss);

//ISR
            double dbIsr;
            if (dbSueldoBase < 6000) {
                dbIsr = 0;
            } else {
                //CALCULO TOTAL INGRESOS
                double dbSueldoAnual = dbSueldoBase * 12;
                double dbBonificacionIncentivoAnual = dbBonificacionIncentivo * 12;
                double dbIngresoAnual = dbSueldoAnual + dbBonificacionIncentivoAnual;
                //CALCULO TOTAL DESCUENTOS
                double dbIgssAnual = dbIgss * 12;
                double dbDescuentoAnual = dbIgssAnual + 48000;
                //CALCULO RENTA BRUTA
                double dbRentaBruta = dbIngresoAnual - dbDescuentoAnual;
                //CALCULO ISR ANUAL
                double dbIsrAnual = dbRentaBruta * 0.05;
                //CALCULO ISR MENSUAL
                dbIsr = dbIsrAnual / 12;
                //CONVERSION DE DOUBLE A STRING
                String strIsr = String.valueOf(dbIsr);
                dbIsr = Math.round(dbIsr * 100) / 100;
                //IMPRESION EN PANTALLA
                txtIsr.setText(strIsr);
            }
        }
    }//GEN-LAST:event_txtComisionesKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtBonificacionesExtraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBonificacionesExtraKeyReleased

        String strSueldoBase = txtSueldoBase.getText();
        String strComisiones = txtComisiones.getText();
        String strBonificacionesExtra = txtBonificacionesExtra.getText();
        String strBonificacionIncentivo = txtBonificacionIncentivo.getText();

        if (strSueldoBase.equals("") == false && strBonificacionIncentivo.equals("") == false) {
            //CALCULO DE SUELDO DEVENGADO
//CONVERSION DE STRING A DOUBLE
            double dbSueldoBase = Double.parseDouble(txtSueldoBase.getText());
            double dbComisiones = Double.parseDouble(txtComisiones.getText());
            double dbBonificacionesExtra = Double.parseDouble(txtBonificacionesExtra.getText());
            double dbBonificacionIncentivo = Double.parseDouble(txtBonificacionIncentivo.getText());

            //CALCULO DE SUELDO DEVENGADO
            double dbSueldoDevengado = dbSueldoBase + dbComisiones + dbBonificacionesExtra + dbBonificacionIncentivo;
            dbSueldoDevengado = Math.round(dbSueldoDevengado * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strSueldoDevengado = String.valueOf(dbSueldoDevengado);
            //IMPRESIÓN EN PANTALLA
            txtSueldoDevengado.setText(strSueldoDevengado);

            //CALCULO DE DESCUENTOS
//IGSS
            double dbIgss = dbSueldoBase * 0.0483;
            //CONVERSION DE DOUBLE A STRING
            dbIgss = Math.round(dbIgss * 100) / 100d;
            String strIgss = String.valueOf(dbIgss);
            //IMPRESION EN PANTALLA
            txtIgss.setText(strIgss);

//ISR
            double dbIsr;
            if (dbSueldoBase < 6000) {
                dbIsr = 0;
            } else {
                //CALCULO TOTAL INGRESOS
                double dbSueldoAnual = dbSueldoBase * 12;
                double dbBonificacionIncentivoAnual = dbBonificacionIncentivo * 12;
                double dbIngresoAnual = dbSueldoAnual + dbBonificacionIncentivoAnual;
                //CALCULO TOTAL DESCUENTOS
                double dbIgssAnual = dbIgss * 12;
                double dbDescuentoAnual = dbIgssAnual + 48000;
                //CALCULO RENTA BRUTA
                double dbRentaBruta = dbIngresoAnual - dbDescuentoAnual;
                //CALCULO ISR ANUAL
                double dbIsrAnual = dbRentaBruta * 0.05;
                //CALCULO ISR MENSUAL
                dbIsr = dbIsrAnual / 12;
                //CONVERSION DE DOUBLE A STRING
                String strIsr = String.valueOf(dbIsr);
                dbIsr = Math.round(dbIsr * 100) / 100d;
                //IMPRESION EN PANTALLA
                txtIsr.setText(strIsr);
            }
        }

    }//GEN-LAST:event_txtBonificacionesExtraKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtIgssKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIgssKeyReleased

        String strIgss = txtIgss.getText();
        String strIsr = txtIsr.getText();
        String strAnticipos = txtAnticipos.getText();
        String strDescuentosJ = txtDescuentosJ.getText();
        String strOtrosDescuentos = txtOtrosDescuentos.getText();

        if (strIgss.equals("") == false) {

//CONVERSION DE STRING A DOUBLE
            double dbIgss = Double.parseDouble(txtIgss.getText());
            double dbIsr = Double.parseDouble(txtIsr.getText());
            double dbAnticipos = Double.parseDouble(txtAnticipos.getText());
            double dbDescuentosJ = Double.parseDouble(txtDescuentosJ.getText());
            double dbOtrosDescuentos = Double.parseDouble(txtOtrosDescuentos.getText());

            //CALCULO DE TOTAL DESCUENTOS
            double dbTotalDescuentos = dbIgss + dbIsr + dbAnticipos + dbDescuentosJ + dbOtrosDescuentos;
            dbTotalDescuentos = Math.round(dbTotalDescuentos * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strTotalDescuentos = String.valueOf(dbTotalDescuentos);
            //IMPRESIÓN EN PANTALLA
            txtTotalDescuentos.setText(strTotalDescuentos);

            //CALCULO DE SUELDO LIQUIDO
            //CONVERSION DE STRING A DOUBLE
            double dbIngresos = Double.parseDouble(txtSueldoDevengado.getText());

            double dbSueldoLiquido = dbIngresos - dbTotalDescuentos;
            //CONVERSION DE DOUBLE A STRING
            dbSueldoLiquido = Math.round(dbSueldoLiquido * 100) / 100d;
            String strSueldoLiquido = String.valueOf(dbSueldoLiquido);
            //IMPRESION EN PANTALLA
            txtSueldoLiquido.setText(strSueldoLiquido);

        }
    }//GEN-LAST:event_txtIgssKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtIsrKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIsrKeyReleased
        String strIgss = txtIgss.getText();
        String strIsr = txtIsr.getText();
        String strAnticipos = txtAnticipos.getText();
        String strDescuentosJ = txtDescuentosJ.getText();
        String strOtrosDescuentos = txtOtrosDescuentos.getText();

        if (strIgss.equals("") == false) {

//CONVERSION DE STRING A DOUBLE
            double dbIgss = Double.parseDouble(txtIgss.getText());
            double dbIsr = Double.parseDouble(txtIsr.getText());
            double dbAnticipos = Double.parseDouble(txtAnticipos.getText());
            double dbDescuentosJ = Double.parseDouble(txtDescuentosJ.getText());
            double dbOtrosDescuentos = Double.parseDouble(txtOtrosDescuentos.getText());

            //CALCULO DE TOTAL DESCUENTOS
            double dbTotalDescuentos = dbIgss + dbIsr + dbAnticipos + dbDescuentosJ + dbOtrosDescuentos;
            dbTotalDescuentos = Math.round(dbTotalDescuentos * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strTotalDescuentos = String.valueOf(dbTotalDescuentos);
            //IMPRESIÓN EN PANTALLA
            txtTotalDescuentos.setText(strTotalDescuentos);

            //CALCULO DE SUELDO LIQUIDO
            //CONVERSION DE STRING A DOUBLE
            double dbIngresos = Double.parseDouble(txtSueldoDevengado.getText());

            double dbSueldoLiquido = dbIngresos - dbTotalDescuentos;
            //CONVERSION DE DOUBLE A STRING
            dbSueldoLiquido = Math.round(dbSueldoLiquido * 100) / 100d;
            String strSueldoLiquido = String.valueOf(dbSueldoLiquido);
            //IMPRESION EN PANTALLA
            txtSueldoLiquido.setText(strSueldoLiquido);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtIsrKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtAnticiposKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnticiposKeyReleased
        String strIgss = txtIgss.getText();
        String strIsr = txtIsr.getText();
        String strAnticipos = txtAnticipos.getText();
        String strDescuentosJ = txtDescuentosJ.getText();
        String strOtrosDescuentos = txtOtrosDescuentos.getText();

        if (strIgss.equals("") == false) {

//CONVERSION DE STRING A DOUBLE
            double dbIgss = Double.parseDouble(txtIgss.getText());
            double dbIsr = Double.parseDouble(txtIsr.getText());
            double dbAnticipos = Double.parseDouble(txtAnticipos.getText());
            double dbDescuentosJ = Double.parseDouble(txtDescuentosJ.getText());
            double dbOtrosDescuentos = Double.parseDouble(txtOtrosDescuentos.getText());

            //CALCULO DE TOTAL DESCUENTOS
            double dbTotalDescuentos = dbIgss + dbIsr + dbAnticipos + dbDescuentosJ + dbOtrosDescuentos;
            dbTotalDescuentos = Math.round(dbTotalDescuentos * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strTotalDescuentos = String.valueOf(dbTotalDescuentos);
            //IMPRESIÓN EN PANTALLA
            txtTotalDescuentos.setText(strTotalDescuentos);

            //CALCULO DE SUELDO LIQUIDO
            //CONVERSION DE STRING A DOUBLE
            double dbIngresos = Double.parseDouble(txtSueldoDevengado.getText());

            double dbSueldoLiquido = dbIngresos - dbTotalDescuentos;
            //CONVERSION DE DOUBLE A STRING
            dbSueldoLiquido = Math.round(dbSueldoLiquido * 100) / 100d;
            String strSueldoLiquido = String.valueOf(dbSueldoLiquido);
            //IMPRESION EN PANTALLA
            txtSueldoLiquido.setText(strSueldoLiquido);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnticiposKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtDescuentosJKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentosJKeyReleased
        String strIgss = txtIgss.getText();
        String strIsr = txtIsr.getText();
        String strAnticipos = txtAnticipos.getText();
        String strDescuentosJ = txtDescuentosJ.getText();
        String strOtrosDescuentos = txtOtrosDescuentos.getText();

        if (strIgss.equals("") == false) {

//CONVERSION DE STRING A DOUBLE
            double dbIgss = Double.parseDouble(txtIgss.getText());
            double dbIsr = Double.parseDouble(txtIsr.getText());
            double dbAnticipos = Double.parseDouble(txtAnticipos.getText());
            double dbDescuentosJ = Double.parseDouble(txtDescuentosJ.getText());
            double dbOtrosDescuentos = Double.parseDouble(txtOtrosDescuentos.getText());

            //CALCULO DE TOTAL DESCUENTOS
            double dbTotalDescuentos = dbIgss + dbIsr + dbAnticipos + dbDescuentosJ + dbOtrosDescuentos;
            dbTotalDescuentos = Math.round(dbTotalDescuentos * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strTotalDescuentos = String.valueOf(dbTotalDescuentos);
            //IMPRESIÓN EN PANTALLA
            txtTotalDescuentos.setText(strTotalDescuentos);

            //CALCULO DE SUELDO LIQUIDO
            //CONVERSION DE STRING A DOUBLE
            double dbIngresos = Double.parseDouble(txtSueldoDevengado.getText());

            double dbSueldoLiquido = dbIngresos - dbTotalDescuentos;
            //CONVERSION DE DOUBLE A STRING
            dbSueldoLiquido = Math.round(dbSueldoLiquido * 100) / 100d;
            String strSueldoLiquido = String.valueOf(dbSueldoLiquido);
            //IMPRESION EN PANTALLA
            txtSueldoLiquido.setText(strSueldoLiquido);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescuentosJKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números. El
     * KeyReleased mantiene actualizados los JTextField que requieren de los
     * datos para hacer calculos automáticos.
     */
    private void txtOtrosDescuentosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOtrosDescuentosKeyReleased
        String strIgss = txtIgss.getText();
        String strIsr = txtIsr.getText();
        String strAnticipos = txtAnticipos.getText();
        String strDescuentosJ = txtDescuentosJ.getText();
        String strOtrosDescuentos = txtOtrosDescuentos.getText();

        if (strIgss.equals("") == false) {

//CONVERSION DE STRING A DOUBLE
            double dbIgss = Double.parseDouble(txtIgss.getText());
            double dbIsr = Double.parseDouble(txtIsr.getText());
            double dbAnticipos = Double.parseDouble(txtAnticipos.getText());
            double dbDescuentosJ = Double.parseDouble(txtDescuentosJ.getText());
            double dbOtrosDescuentos = Double.parseDouble(txtOtrosDescuentos.getText());

            //CALCULO DE TOTAL DESCUENTOS
            double dbTotalDescuentos = dbIgss + dbIsr + dbAnticipos + dbDescuentosJ + dbOtrosDescuentos;
            dbTotalDescuentos = Math.round(dbTotalDescuentos * 100) / 100d;
            //CONVERSION DE DOUBLE A STRING
            String strTotalDescuentos = String.valueOf(dbTotalDescuentos);
            //IMPRESIÓN EN PANTALLA
            txtTotalDescuentos.setText(strTotalDescuentos);

            //CALCULO DE SUELDO LIQUIDO
            //CONVERSION DE STRING A DOUBLE
            double dbIngresos = Double.parseDouble(txtSueldoDevengado.getText());

            double dbSueldoLiquido = dbIngresos - dbTotalDescuentos;
            //CONVERSION DE DOUBLE A STRING
            dbSueldoLiquido = Math.round(dbSueldoLiquido * 100) / 100d;
            String strSueldoLiquido = String.valueOf(dbSueldoLiquido);
            //IMPRESION EN PANTALLA
            txtSueldoLiquido.setText(strSueldoLiquido);

        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtOtrosDescuentosKeyReleased
    /**
     * Llena la tabla NombreEmpleado cuando se ingresa a Generación de Planilla
     * según los empleados en el archivo.
     */
    private void cmbxNombreEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxNombreEmpleadoActionPerformed
        // TODO add your handling code here:
try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");

            PreparedStatement pst2 = cn.prepareStatement("select Codigo_Empleado from Empleados where Nombre_Empleado = ?");
            PreparedStatement pst3 = cn.prepareStatement("select Sueldo_Empleado from Empleados where Nombre_Empleado = ?");
           
            pst2.setString(1, cmbxNombreEmpleado.getSelectedItem().toString());
            pst3.setString(1, cmbxNombreEmpleado.getSelectedItem().toString());
            
            ResultSet rs2 = pst2.executeQuery();
            ResultSet rs3 = pst3.executeQuery();
            

            if(rs2.next()){
                codigoe.setText(rs2.getString("Codigo_Empleado"));
                

            } else {
                
            }
    
             if(rs3.next()){
                txtSueldoBase.setText(rs3.getString("Sueldo_Empleado"));
                

            } else {
                
            }

           
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "¡REGISTRO FALLIDO!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_cmbxNombreEmpleadoActionPerformed

    private void cmbxNombreEmpleadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbxNombreEmpleadoKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbxNombreEmpleadoKeyReleased
    /**
     * Condiciona para que el usuario pueda escribir solamente números.
     */
    private void txtSueldoBaseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSueldoBaseKeyTyped
        // TODO add your handling code here:


    }//GEN-LAST:event_txtSueldoBaseKeyTyped

    private void txtSueldoBaseInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtSueldoBaseInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSueldoBaseInputMethodTextChanged
    /**
     * Llena la tabla NombreEmpleado cuando se ingresa a Generación de Planilla
     * según los empleados en el archivo.
     */
    private void cmbxNombreEmpleadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbxNombreEmpleadoKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cmbxNombreEmpleadoKeyPressed
    /**
     * Ingresa al empleado en el JTable y en un archivo llamado Nomina, donde se
     * guarda un registro de respaldo.
     */
    private void IngresarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngresarEmpleadoActionPerformed
        // TODO add your handling code here:       

            java.util.Date fechaN=date.getDate();
            long fecha=fechaN.getTime();
            java.sql.Date dateN = new java.sql.Date(fecha);
            
try{
            Connection cn2 = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");
            PreparedStatement pst2 = cn2.prepareStatement("select Codigo_Concepto from Conceptos where Codigo_Empleado = ?");
            
            pst2.setString(1, codigoe.getText().trim());
            
            ResultSet rs2 = pst2.executeQuery();
            
            if(rs2.next()){
                ConceptoE.setText(rs2.getString("Codigo_Concepto"));
            } else {                
            }
}catch(Exception e){                
                    }

             try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");
            //localhost es 127.0.0.1
            PreparedStatement pst2 = cn.prepareStatement("insert into nomina values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            
            
            pst2.setString(1, "0");
            pst2.setString(2, dateN.toString());
            pst2.setString(3, codigoe.getText().trim());
            pst2.setString(4, ConceptoE.getText().trim());
            pst2.setString(5, txtSueldoLiquido.getText().trim());
            pst2.setString(6, txtSueldoBase.getText().trim());
            pst2.setString(7, txtComisiones.getText().trim());
            pst2.setString(8, txtBonificacionesExtra.getText().trim());
            pst2.setString(9, txtBonificacionIncentivo.getText().trim());
            pst2.setString(10, txtSueldoDevengado.getText().trim());
            pst2.setString(11, txtIgss.getText().trim());
            pst2.setString(12, txtIsr.getText().trim());
            pst2.setString(13, txtAnticipos.getText().trim());
            pst2.setString(14, txtDescuentosJ.getText().trim());
            pst2.setString(15, txtOtrosDescuentos.getText().trim());
            pst2.setString(16, txtTotalDescuentos.getText().trim());
            pst2.executeUpdate();
            
            cmbxNombreEmpleado.setSelectedItem(0);
            txtSueldoBase.setText("");
            date.updateUI();
            txtComisiones.setText("");
            txtBonificacionesExtra.setText("");
            txtBonificacionIncentivo.setText("250.00");
            txtSueldoDevengado.setText("");
            txtIgss.setText("");
            txtIsr.setText("0");
            txtAnticipos.setText("");
            txtDescuentosJ.setText("");
            txtOtrosDescuentos.setText("");
            txtTotalDescuentos.setText("");
            txtSueldoLiquido.setText("");
            
            JOptionPane.showMessageDialog(this, "¡REGISTRO EXITOSO!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch (Exception e){
         JOptionPane.showMessageDialog(this, "Error en registro", "Warning", JOptionPane.WARNING_MESSAGE);  
        }

    }//GEN-LAST:event_IngresarEmpleadoActionPerformed

    private void txtSueldoBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSueldoBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSueldoBaseActionPerformed
    /**
     * Luego de ingresar un empleado limpia los JTextField para poder ingresar
     * un nuevo empleado.
     */
    private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
        // TODO add your handling code here:
       cmbxNombreEmpleado.setSelectedItem(0);
            txtSueldoBase.setText("");
            date.updateUI();
            txtComisiones.setText("");
            txtBonificacionesExtra.setText("");
            txtBonificacionIncentivo.setText("250.00");
            txtSueldoDevengado.setText("");
            txtIgss.setText("");
            txtIsr.setText("0");
            txtAnticipos.setText("");
            txtDescuentosJ.setText("");
            txtOtrosDescuentos.setText("");
            txtTotalDescuentos.setText("");
            txtSueldoLiquido.setText("");

    }//GEN-LAST:event_LimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {
             Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");
            PreparedStatement pst2 = cn.prepareStatement("delete from nomina where Codigo_Nomina = ?");
            
            
            pst2.setString(1, buscar.getText().trim());
            pst2.executeUpdate();
            
            
         cmbxNombreEmpleado.setSelectedItem(0);
            cmbxNombreEmpleado.setSelectedItem(0);
            txtSueldoBase.setText("");
            date.updateUI();
            txtComisiones.setText("");
            txtBonificacionesExtra.setText("");
            txtBonificacionIncentivo.setText("250.00");
            txtSueldoDevengado.setText("");
            txtIgss.setText("");
            txtIsr.setText("0");
            txtAnticipos.setText("");
            txtDescuentosJ.setText("");
            txtOtrosDescuentos.setText("");
            txtTotalDescuentos.setText("");
            txtSueldoLiquido.setText("");
            
            JOptionPane.showMessageDialog(this, "¡ELIMINACION EXITOSA!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error en eliminación", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try{
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");
            PreparedStatement pst = cn.prepareStatement("select * from nomina where Codigo_Nomina = ?");
            
            pst.setString(1, buscar.getText().trim());
            
            ResultSet rs = pst.executeQuery();
            
            if(rs.next()){
                codigoe.setText(rs.getString("Codigo_Empleado"));
                ConceptoE.setText(rs.getString("Codigo_Concepto"));
                txtSueldoLiquido.setText(rs.getString("SueldoL"));
                txtSueldoBase.setText(rs.getString("SueldoBase"));
                txtComisiones.setText(rs.getString("Comisiones"));
                txtBonificacionesExtra.setText(rs.getString("Bonificaciones"));
                txtBonificacionIncentivo.setText(rs.getString("Incentivo"));
                txtSueldoDevengado.setText(rs.getString("Devengado"));
                txtIgss.setText(rs.getString("Igss"));
                txtIsr.setText(rs.getString("Isr"));
                txtAnticipos.setText(rs.getString("Anticipos"));
                txtDescuentosJ.setText(rs.getString("DescuentosJ"));
                txtOtrosDescuentos.setText(rs.getString("OtrosDescuentos"));
                txtTotalDescuentos.setText(rs.getString("TotalDesucentos"));
                
            } else {
                JOptionPane.showMessageDialog(this, "Nomina no registrada", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(this, "Error al buscar", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:

             try{
                 String ID = buscar.getText().trim();
            Connection cn = DriverManager.getConnection("jdbc:mysql://localhost/nominaproyect", "root", "6182");
            //localhost es 127.0.0.1
            PreparedStatement pst2 = cn.prepareStatement("update nomina set codigo_empleado = ?, codigo_concepto = ?, sueldol = ?, sueldobase = ? , comisiones= ?, bonificaciones=?, incentivo=?, devengado=?, igss=?, isr=?, anticipos=?, descuentosj=?,otrosdescuentos=?,totaldesucentos=? where codigo_nomina=" + ID);
            
            
            pst2.setString(1, codigoe.getText().trim());
            pst2.setString(2, ConceptoE.getText().trim());
            pst2.setString(3, txtSueldoLiquido.getText().trim());
            pst2.setString(4, txtSueldoBase.getText().trim());
            pst2.setString(5, txtComisiones.getText().trim());
            pst2.setString(6, txtBonificacionesExtra.getText().trim());
            pst2.setString(7, txtBonificacionIncentivo.getText().trim());
            pst2.setString(8, txtSueldoDevengado.getText().trim());
            pst2.setString(9, txtIgss.getText().trim());
            pst2.setString(10, txtIsr.getText().trim());
            pst2.setString(11, txtAnticipos.getText().trim());
            pst2.setString(12, txtDescuentosJ.getText().trim());
            pst2.setString(13, txtOtrosDescuentos.getText().trim());
            pst2.setString(14, txtTotalDescuentos.getText().trim());
            pst2.executeUpdate();
            
            cmbxNombreEmpleado.setSelectedItem(0);
            txtSueldoBase.setText("");
            date.updateUI();
            txtComisiones.setText("");
            txtBonificacionesExtra.setText("");
            txtBonificacionIncentivo.setText("250.00");
            txtSueldoDevengado.setText("");
            txtIgss.setText("");
            txtIsr.setText("0");
            txtAnticipos.setText("");
            txtDescuentosJ.setText("");
            txtOtrosDescuentos.setText("");
            txtTotalDescuentos.setText("");
            txtSueldoLiquido.setText("");
            
            JOptionPane.showMessageDialog(this, "¡MODIFICACION EXITOSA!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }catch (Exception e){
         JOptionPane.showMessageDialog(this, "Error en modificación", "Warning", JOptionPane.WARNING_MESSAGE);  
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generación_Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generación_Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generación_Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generación_Nomina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Generación_Nomina().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ConceptoE;
    private javax.swing.JButton IngresarEmpleado;
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JTextField buscar;
    private javax.swing.JComboBox<String> cmbxNombreEmpleado;
    private javax.swing.JLabel codigoe;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel fechanomina;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAnticipos;
    private javax.swing.JLabel lblBonificacionIncentivo;
    private javax.swing.JLabel lblBonificacionesExtra;
    private javax.swing.JLabel lblCalculodeDescuentos;
    private javax.swing.JLabel lblCalculodeIngresos;
    private javax.swing.JLabel lblComisiones;
    private javax.swing.JLabel lblDescuentosJ;
    private javax.swing.JLabel lblIgss;
    private javax.swing.JLabel lblIngreseNum1;
    private javax.swing.JLabel lblIngreseNum2;
    private javax.swing.JLabel lblIngreseNum4;
    private javax.swing.JLabel lblIngreseNum5;
    private javax.swing.JLabel lblIngreseNum6;
    private javax.swing.JLabel lblIngresodeDatos;
    private javax.swing.JLabel lblIsr;
    private javax.swing.JLabel lblNombreEmpleado;
    private javax.swing.JLabel lblOtrosDescuentos;
    private javax.swing.JLabel lblSueldoBase;
    private javax.swing.JLabel lblSueldoDevengado;
    private javax.swing.JLabel lblTotalDescuentos;
    private javax.swing.JLabel lblTotalDescuentos1;
    private javax.swing.JTextField txtAnticipos;
    private javax.swing.JTextField txtBonificacionIncentivo;
    private javax.swing.JTextField txtBonificacionesExtra;
    private javax.swing.JTextField txtComisiones;
    private javax.swing.JTextField txtDescuentosJ;
    private javax.swing.JTextField txtIgss;
    private javax.swing.JTextField txtIsr;
    private javax.swing.JTextField txtOtrosDescuentos;
    private javax.swing.JTextField txtSueldoBase;
    private javax.swing.JTextField txtSueldoDevengado;
    private javax.swing.JTextField txtSueldoLiquido;
    private javax.swing.JTextField txtTotalDescuentos;
    // End of variables declaration//GEN-END:variables
}
